#!/usr/bin/env bash

# #region ########## DON'T GEN DOCUMENTATION ##########
if [ "$1" = '--help' ]; then
	exit 1
elif [ "$1" = '--version' ]; then
	exit 1
fi
# #endregion ########## DON'T GEN DOCUMENTATION ##########

readonly MAX_INT=$(( 2**63 - 1 ))
declare -r -i MAX_READ_INT=$(( 2**31 - 1))
# https://unix.stackexchange.com/questions/592159/how-to-read-file-in-bash-using-a-fixed-number-of-character#comment1104513_592159
# https://www.reddit.com/r/bash/comments/1cest8z/comment/l1o17vt/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button
# https://www.reddit.com/r/bash/comments/1cest8z/comment/l1orak7/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button
declare -r -i MAX_READ_BUFFER=4096
# #region ########## SIGNALS ##########
# cspell:disable
# https://man7.org/linux/man-pages/man7/signal.7.html
readonly SIGHUP=1
readonly SIGINT=2
readonly SIGQUIT=3
readonly SIGILL=4
readonly SIGTRAP=5
readonly SIGABRT=6
readonly SIGIOT=6
readonly SIGBUS=7
# readonly SIGEMT=-
readonly SIGFPE=8
readonly SIGKILL=9
readonly SIGUSR1=10
readonly SIGSEGV=11
readonly SIGUSR2=12
readonly SIGPIPE=13
readonly SIGALRM=14
readonly SIGTERM=15
readonly SIGSTKFLT=16
readonly SIGCHLD=17
# readonly SIGCLD=17
readonly SIGCONT=18
readonly SIGSTOP=19
readonly SIGTSTP=20
readonly SIGTTIN=21
readonly SIGTTOU=22
readonly SIGURG=23
readonly SIGXCPU=24
readonly SIGXFSZ=25
readonly SIGVTALRM=26
readonly SIGPROF=27
readonly SIGWINCH=28
readonly SIGIO=29
readonly SIGPOLL=SIGIO
readonly SIGPWR=30
# readonly SIGINFO=-
# readonly SIGLOST=-
readonly SIGSYS=31
readonly SIGUNUSED=31
# cspell:enable
# #endregion ########## SIGNALS ##########

#########################region GET OPTIONS#########################
# #region ########## METHOD 1 ##########
useLabels='false'
useValues='true'
while [ "$1" != "" ] && [ "$1" != '--' ]; do
    #If it's an option
    if [[ $1 =~ ^\- ]]; then
        useLabels='false'
        if [[ ${#VALUES[@]} -gt 0 ]]; then
            useValues='false'
        fi
    fi
    case $1 in
        # #region Flags
		-l | --labels )
		    useLabels='true'
		    ;;
		-t | --passthrough )
		    passthrough='true'
		    ;;
		-z | --zero_based )
		    zero_based='true'
		    ;;
		-r | --return_decoded )
		    decode_value_before_return='true'
		    ;;
		# #endregion Flags
        # #region Values
		-d | --decode | --decode_method )
		    shift
		    decode_method=$1
		    ;;
		-p | --prompt )
		    shift
		    prompt=$1
		    ;;
		-c | --option_count_format )
		    shift
		    option_count_format=$1
		    ;;
		-b | --blank_label )
		    shift
		    blank_label=$1
		    ;;
		--replace_blank_label_with )
		    shift
		    replace_blank_label_with=$1
		    ;;
		-f | --return_on_fail | --return_on_failure )
		    shift;
		    return_on_failure=$1
		    ;;
		# #endregion Values
        -h | --help )
            show_help
            exit
            ;;
        * )
            if $($useLabels); then
                LABELS[${#LABELS[@]}]=$1
            elif $($useValues); then
                VALUES[${#VALUES[@]}]=$1
            else
                show_help
                exit 1
            fi
            ;;
    esac
    shift
done
# #endregion ########## METHOD 1 ##########

# #region ########## ORDERED OR LABELED ##########
declare -n opt1=testCommand opt2=testPath opt3=testFile
while [[ -n "${1+x}" ]]; do
	case "$1" in
		(-h | --help)
			show_help
			exit
			;;
		(-v | --version)
			show_version
			exit
			;;
		# (-c | --coarseness)
		# 	shift
		# 	coarseInput="$1"
		# 	shift
		# 	;;
		# (-d | --decimal)
		# 	shift
		# 	separator="$1"
		# 	shift
		# 	;;
		(*)
			if [[ -n "${opt1+x}" ]]; then
				if [[ -n "${opt2+x}" ]]; then
					if [[ -n "${opt3+x}" ]]; then
						exit 1
					else
						opt3="$1"
					fi
				else
					opt2="$1"
				fi
			else
				opt1="$1"
			fi
			shift
			;;
	esac
done
# #endregion ########## ORDERED OR LABELED ##########
#########################endregion GET OPTIONS#########################

##region################## SHOW_HELP/VERSION TEMPLATE ####################
show_help() {
	# or:	$0 [-c COARSENESS] [-d SEPARATOR] NUMERATOR DENOMINATOR
	# -c, --coarseness COARSENESS: precision. Defaults to $DEFAULT_COARSENESS.
	# -d, --decimal SEPARATOR: the fractional separator. Defaults to $DEFAULT_DECIMAL
	cat << __EOF__
A template I didn't replace.

Usage:	$0
	or:	$0 --help
	or:	$0 --version

Options:
	-h, --help: Shows this help text.
	-v, --version: Shows version info.
__EOF__
}
show_version() {
	cat << __EOF__
$0 1.0.0

Copyright (C) 2025 Justin Morris
__EOF__
}
##endregion################ SHOW_HELP/VERSION TEMPLATE ###################