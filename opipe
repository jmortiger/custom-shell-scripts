#!/usr/bin/env bash

# declare -r -i MAX_INT=$(( 2**62 - 1 + 2**62 ))
declare -r -i MAX_INT=$(( 2**62 - 1 + 2**62 ))
declare -r -i MAX_READ_INT=$(( 2**31 - 1))
# https://man7.org/linux/man-pages/man7/signal.7.html
readonly SIGHUP=1
readonly SIGINT=2
readonly SIGQUIT=3
readonly SIGTRAP=5
readonly SIGABRT=6
readonly SIGKILL=9
readonly SIGTERM=15
readonly SIGSTKFLT=16
readonly SIGCHLD=17
# readonly SIGCLD=17
readonly SIGCONT=18
readonly SIGSTOP=19
readonly SIGTSTP=20
readonly SIGTTIN=21
readonly SIGTTOU=22
readonly SIGPROF=27
readonly SIGWINCH=28
readonly ORIG_IFS=$IFS
current_count=0
current_length=0
# display_count() {
# 	tput smcup
# 	tput sc
# 	tput 
# }
init_row_col=($(cursor_pos))
# exec 3< <($("$@"))
# $("./spawner $@")

# 3<(./spawner $@)
# val=$(<(&3))
# $("$@") > /dev/fd/3 2>&1 &
cumulative=""
line=""
sub_pid=0
# $("$@") >&3 2>&1 &
# $("$@") &>3 &
exec 3< <("$@")
# $("$@") > /dev/fd/3 2>&1 &
# 3< <("$@")
# $("$@") &>3 &
# (`$@`)1>|&3 &
# coproc my_proc ( stdbuf -0 `$@` )
# coproc my_proc ( `$@` )
sub_pid=$!
echo $sub_pid
# echo $my_proc_PID
out_pipe() {
	# read -n $MAX_READ_INT -u 3 tline
	# (echo -n ${my_proc[0]}) | read -n $MAX_READ_INT tline
	# line=`echo -n ${my_proc[0]}`
	# read -n $MAX_READ_INT -u ${my_proc[0]} tline
	# read -n $MAX_READ_INT -u ${my_proc[0]} tline
	# read -r -n 1 tline <&"${my_proc[0]}"
	read -s -r -n 1 -u 3 line
	# echo $line
	# echo -n "&${my_proc[0]}"
}
is_active="true"
do_stop() {
	kill -n $1 $sub_pid
	exec 3>&-
	exit $?
}
trap "do_stop $SIGINT" INT
trap "do_stop $SIGQUIT" QUIT
trap "do_stop $SIGTERM" TERM
trap "do_stop $SIGKILL" KILL
while `$is_active`; do
	# line=$(out_pipe)
	# line=`out_pipe`
	# echo "READ ATTEMPT"
	out_pipe
	if [ $line ]; then
		echo -n $line
		cumulative="$cumulative$line"
	elif kill $sub_pid > /dev/null 2>&1; then
		echo "(empty)"
	else
		echo "DONE!"
		is_active="false"
	fi
	# let current_count+=1
	# echo "_" $line "_"
	# cumulative="$cumulative$line"
	# sleep 1
done
echo "Successfully completed!"
echo "Cumulative output:
$cumulative"
exit $?