#!/usr/bin/env bash

declare -r -i MAX_INT=$(( 2**63 - 1 ))
declare -r -i MAX_READ_INT=$(( 2**31 - 1))
# https://man7.org/linux/man-pages/man7/signal.7.html
readonly SIGHUP=1
readonly SIGINT=2
readonly SIGQUIT=3
readonly SIGTRAP=5
readonly SIGABRT=6
readonly SIGKILL=9
readonly SIGTERM=15
readonly SIGSTKFLT=16
readonly SIGCHLD=17
readonly SIGCONT=18
readonly SIGSTOP=19
readonly SIGTSTP=20
readonly SIGTTIN=21
readonly SIGTTOU=22
readonly SIGPROF=27
readonly SIGWINCH=28
readonly ORIG_IFS=$IFS
current_count=0
current_length=0
# display_count() {
# 	tput smcup
# 	tput sc
# 	tput 
# }
init_row_col=($(cursor_pos))
cumulative=""
line=""
sub_pid=0
exec 3< <("$@")
# exec 3< <("$@")
sub_pid=$!
# echo $sub_pid
out_pipe() {
	read -s -r -N 1 -u 3 line
}
is_active="true"
is_killing="false"
do_stop() {
	if `$is_killing`; then
		kill -n $1 $sub_pid
	else
		is_killing='true'
	fi
	exitcode=`wait $sub_pid`
	exec 3>&-
	exit $exitcode
}
trap "do_stop $SIGINT" INT
trap "do_stop $SIGQUIT" QUIT
trap "do_stop $SIGTERM" TERM
trap "do_stop $SIGKILL" KILL
while `$is_active`; do
	let current_count+=1
	out_pipe
	if [ -n "$line" ]; then
		line="$line"
	elif kill -0 $sub_pid > /dev/null 2>&1; then
		line=''
		echo "(empty)"
	else
		echo -e "\nDONE!"
		is_active="false"
	fi
	if $($is_active); then
		echo -n "$line"
		cumulative+="$line"
	fi
done
echo "Successfully completed!"
echo "Iterations: $current_count
Cumulative length: ${#cumulative}
Cumulative output:
$cumulative"
exit $?