
OPipe:
	✔ Add support for time. @done(25-01-11 12:15)
		✔ Store time & date started @done(25-01-11 11:26)
		✔ Calc in text generator @done(25-01-11 12:15)
	✔ Add support for x out of y. @done(25-01-11 13:19)
		✔ Hardcode test count (currently 1466) @done(25-01-11 13:19)
		✔ Add to status line @done(25-01-11 13:19)
		✔ Calculate percentage completion @done(25-01-11 13:19)
	✔ Add support for time remaining estimate. @done(25-01-11 12:53)
	✔ Improve time estimation @done(25-01-12 16:13)
	✔ Make new time start for estimation after start_int initialized @done(25-01-12 16:13)
	✔ Increase decimal precision (average is useless as is) @done(25-01-12 17:40)
	✔ Force Refresh every x seconds @done(25-01-17 12:57)
	- Get estimated test count from working directory
	- Start in Character Read Mode and switch to Flush Read Mode once the 1st character comes in to prevent/minimize wheel-spinning at the start of the run.
	- Add support for dynamic window resizing.
		- Add variable that stops multiple calls to display text from firing at once
		- Add variable that caches prior changes when stopped to add them when free
		- Add trap for WINdowCHange
			- Put main line on hold
			- Update status line if necessary
	- Read and write statistics to a file (e.g. Avg. Start Time, Avg. Run Time, etc.)
	- If fixing a parsing mistake in the prior update, support redrawing w/ the correct color

Count Ruby Tests:
	✔ Analyze the files in the given directory tree to determine how many tests there are. @done
		✔ Take in a directory or use the current directory @done
		✔ Find the sub-directory named `test` @done
		✔ Find the # of files ending in `_test.rb` @done
		✔ For each: @done
			✔ find each line starting with whitespace, and the word `should` @done
				✔ Regex: `(^|$'\n')[[:blank:]]*should (["'])?([_[:print:][:blank:][:punct:]]*?)(\2)? do($|$'\n')` @done
	- Count static loops

Print decimal calculations:
	✔ Initial implementation @done(25-01-12 17:34)
	✔ Customizable decimal separator @done(25-01-12 17:36)
	✔ Customizable precision @done(25-01-12 17:37)
	✔ Trim trailing zeros @done(25-01-15 15:36)
	✔ Carrying the round up @done(25-01-15 16:29)
	✔ Add test cases @done(25-01-21 13:58)
	✔ Support negatives @done(25-01-24 12:20)
	- Customizable formatting
		- pad leading/trailing zeros

Format seconds:
	✔ Pull initial implementation from opipe @done(25-01-12 17:49)
	- Customizable formatting

# A framework to add a status line to anything
Status Report:
	- Retrieve old version of opipe and update it/remove contextual elements from newest version
	- Allow update mode customization
		- Single Char
		- Timer
		- Flush Output
		- Mixed
			- Flush output but if timer exceeded force the update
	- Allow update throttling

Cursor Position:
	- Add help text

Profile Text:
	- Allow Outputting multiple values instead of only 1 per run to get the most value out of a single run.
	- FIGURE OUT TIES for max_col_at
	- Add option - Modify text in accordance w/ control characters like backspace & CR?
	- IMPLEMENT max_chars_in_row
	- IMPLEMENT rows_where
	- IMPLEMENT p_debugLevel
	- Finish optimizing for requested values
	- Finish unwrapped stuff
	- Add option for `final_cursor_position` that finds the resting horizontal and vertical position of the cursor (i.e. accounting for CRs, VTs, Backspaces, etc. )
	- Check if CR on wrapped line will return to start of wrapped line or unwrapped line
	- Finish handling trailing chars
	- Add outputs for new options

Check Number:
	- Create option to run test cases
	- Add hex support?
	- Add octal support?
	- Add dynamic base support?
	- Add bounds support?
	- Add fraction support?

Test Runner:
	- Test groups
	- Multiline test inputs
	- Improve test file path detection (reduce redundancy)
	- Add assertions
		- equals
		- not equals
		- error
		- not_error

Type Test:
	- Basic implementation
		- Uses randomly generated words
		- displays the typed characters beneath the prompted characters
		- shows status line of current stats
	- Uses a resource list of words
	- Option to use generated words or valid words
	- Uses a resource list of words

Misc:
	- Make error_exit w/ call stack using
		- https://www.gnu.org/software/bash/manual/bash.html#index-FUNCNAME
		- https://www.gnu.org/software/bash/manual/bash.html#index-caller
		- https://www.gnu.org/software/bash/manual/bash.html#index-BASH_005fLINENO
		- https://www.gnu.org/software/bash/manual/bash.html#index-BASH_005fSOURCE
		- https://www.gnu.org/software/bash/manual/bash.html#index-LINENO
Archive:
