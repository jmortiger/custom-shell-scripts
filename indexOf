#!/usr/bin/env bash

##region########################################### HELP & VERSION ###########################################
_show_help() {
	cat << __EOF__
Finds the location in the list of the specified value, or -1 if not in the list.

Usage:	$0 [-lf] [--] VALUE ENTRY1 ENTRY2...
	or:	$0 --value VALUE [-lf] [--] ENTRY1 ENTRY2...
	or:	$0 [--last|first] [--] VALUE ENTRY1 ENTRY2...
	or:	$0 --help
	or:	$0 --version

Options:
	-h, --help: Shows this help text.
	--version: Shows version info.
	-v, --value VALUE: The value to find the index of. Can be an empty string.
	-f, --first: Find the first occurrence of the value. Mutually exclusive with -l. Default.
	-l, --last: Find the last occurrence of the value. Mutually exclusive with -f.
	--: Stop processing parameters. If 

Exit Status:
	0 if found, 1 if not found, 255 for undefined execution error.
__EOF__
}
_show_version() {
	cat << __EOF__
$0 1.1.0

Copyright (C) 2025 Justin Morris
__EOF__
}
##endregion######################################## HELP & VERSION ###########################################

# TODO: Non-zero-based Index
# TODO: All Indices
declare fLast='false'
declare value=''; unset value
while [[ "$1" =~ ^- ]]; do
	case "$1" in
		(-h | --help) _show_help; exit 0;;
		(--version) _show_version; exit 0;;
		(-v | --value)
			shift
			declare -r value="$1"
			;;
		(-l | --last) declare -r fLast='true';;
		(-f | --first) declare -r fLast='false';;
		(--)
			shift
			break
			;;
		(*)
			if [[ -z "${value+UNSET}" ]]; then
				declare -r value="$1"
				shift
			fi
			break
			;;
	esac
	shift
done

declare -r value="$1" &>'/dev/null' && ! shift && exit 255
if eval $fLast; then
	for ((i = $#; i > 0; i--)); do
		if [ "$value" = "${!i}" ]; then
			echo "$((i - 1))"
			exit 0
		fi
	done
else
	for ((i = 1; i <= $#; i++)); do
		if [ "$value" = "${!i}" ]; then
			echo "$((i - 1))"
			exit 0
		fi
	done
fi
echo "-1"
exit 1