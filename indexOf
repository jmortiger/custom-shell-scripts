#!/usr/bin/env bash

##region########################################### HELP & VERSION ###########################################
_show_help() {
	# or:	$0 --value VALUE ENTRY1 ENTRY2...
	# --value VALUE: The value to find the index of. Can be an empty string.
	cat << __EOF__
Finds the location in the list of the specified value, or -1 if not in the list.

Usage:	$0 [-lf] [--] VALUE ENTRY1 ENTRY2...
	or:	$0 [--last|first] [--] VALUE ENTRY1 ENTRY2...
	or:	$0 --help
	or:	$0 --version

Options:
	-h, --help: Shows this help text.
	-v, --version: Shows version info.
	-f, --first: Find the first occurrence of the value. Mutually exclusive with -l. Default.
	-l, --last: Find the last occurrence of the value. Mutually exclusive with -f.
	--: Stop processing parameters.
__EOF__
}
_show_version() {
	cat << __EOF__
$0 1.0.0

Copyright (C) 2025 Justin Morris
__EOF__
}
##endregion######################################## HELP & VERSION ###########################################

# TODO: Non-zero-based Index
# TODO: All Indices
declare fLast='false'
declare value=
while [[ "$1" =~ ^- ]]; do
	case "$1" in
		(-h | --help)
			_show_help
			exit
			;;
		(-v | --version)
			_show_version
			exit
			;;
		(--)
			shift
			break
			;;
		# (-s | --value)
		# 	shift
		# 	declare -r value="$1"
		# 	shift
		# 	;;
		(-l | --last)
			declare -r fLast='true'
			shift
			;;
		(*)
			# if [[ -n "${opt1+x}" ]]; then
			# 	if [[ -n "${opt2+x}" ]]; then
			# 		if [[ -n "${opt3+x}" ]]; then
			# 			exit 1
			# 		else
			# 			opt3="$1"
			# 		fi
			# 	else
			# 		opt2="$1"
			# 	fi
			# else
			# 	opt1="$1"
			# fi
			# shift
			break
			;;
	esac
done

if declare -r value="$1" && ! shift; then exit 255; fi
if eval $fLast; then
	for ((i = $#; i > 0; i--)); do
		if [ "$value" = "${!i}" ]; then
			echo -n "$((i - 1))"
			exit 0
		fi
	done
else
	for ((i = 1; i <= $#; i++)); do
		if [ "$value" = "${!i}" ]; then
			echo -n "$((i - 1))"
			exit 0
		fi
	done
fi
echo -n "-1"
exit 2